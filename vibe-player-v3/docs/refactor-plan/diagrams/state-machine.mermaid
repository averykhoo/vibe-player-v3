%% vibe-player-v3/docs/refactor-plan/diagrams/state-machine.mermaid
%% A detailed state diagram for the Vibe Player application.
%% Transitions are prefixed with COMMAND_ for user-initiated actions
%% and EVENT_ for system-internal notifications.

stateDiagram-v2
    direction LR

    [*] --> IDLE
    IDLE --> LOADING: COMMAND_LOAD_AUDIO

    LOADING --> READY: EVENT_LOAD_SUCCESS
    LOADING --> ERROR: EVENT_LOAD_FAILURE

    READY --> PLAYING: COMMAND_PLAY
    READY --> SEEK_AND_HOLD: COMMAND_BEGIN_SEEK
    READY --> LOADING: COMMAND_LOAD_AUDIO
    READY --> ERROR: EVENT_ANALYSIS_FAILURE

    PLAYING --> READY: COMMAND_PAUSE
    PLAYING --> READY: EVENT_PLAYBACK_ENDED
    PLAYING --> SEEK_AND_RESUME: COMMAND_BEGIN_SEEK
    PLAYING --> LOADING: COMMAND_LOAD_AUDIO
    PLAYING --> ERROR: EVENT_PLAYBACK_FAILURE

    note "The two SEEK states exist to correctly<br/>remember whether to resume playing or remain<br/>paused after the user stops seeking, even if<br/>they toggle play/pause mid-drag." as SeekNote
    
    SEEK_AND_RESUME --> PLAYING: COMMAND_END_SEEK
    SEEK_AND_RESUME --> SEEK_AND_HOLD: COMMAND_PAUSE
    SEEK_AND_RESUME --> ERROR: EVENT_PLAYBACK_FAILURE

    SEEK_AND_HOLD --> READY: COMMAND_END_SEEK
    SEEK_AND_HOLD --> SEEK_AND_RESUME: COMMAND_PLAY
    SEEK_AND_HOLD --> ERROR: EVENT_PLAYBACK_FAILURE

    ERROR --> LOADING: COMMAND_LOAD_AUDIO